name: Solis Deploy CDK Stack

on:
  push:
    branches:
      - main
  pull_request:
    types: [synchronize, opened, reopened]
# TODO: build order to deploy the arkproject on goerli
# 1. Build contracts
# 2. Deploy starknet contracts on goerli
# 3. Save starknet contract addresses in github secrets
# 4. Deploy CDK stack
# 5. Deploy Orderbook contract on Solis goerli

jobs:
  build:
    name: Build contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: 2.3.1
      - name: Build contracts
        run: cd contracts && scarb build -w

  deploy-solis:
    name: Deploy Solis latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Install pnpm
        run: |
          npm install -g pnpm
          npm install -g aws-cdk
          pnpm install

      - name: Read environment variables from file
        id: vars
        run: |
          content=`cat contracts.json`
          STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI=$(echo $content | jq -r '.goerli.messaging')
          echo "STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI=$STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd aws/cdk-solis-ecs
          pnpm install

      - name: Deploy CDK Stack Goerli
        env:
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL_GOERLI }}
          STARKNET_APPCHAIN_MESSAGING_ADDRESS: ${{ env.STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI }}
          STARKNET_SOLIS_ACCOUNT_ADDRESS: ${{ secrets.STARKNET_SOLIS_ACCOUNT_ADDRESS_GOERLI }}
          STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY: ${{ secrets.STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY_GOERLI }}
        run: |
          cd aws/cdk-solis-ecs
          pnpm cdk deploy --all --require-approval never

  # deploy:
  #   name: Deploy Solis orderbook contract on goerli
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: pnpm install
  #     - name: Deploy Solis orderbook contract
  #       env:
  #         STARKNET_NODE_URL_GOERLI: ${{ secrets.STARKNET_NODE_URL_GOERLI }}
  #         SOLIS_NODE_URL_GOERLI: ${{ secrets.SOLIS_NODE_URL_GOERLI }}
  #         STARKNET_ADMIN_ADDRESS_GOERLI: ${{ secrets.STARKNET_ADMIN_ADDRESS_GOERLI }}
  #         STARKNET_ADMIN_PRIVATE_KEY_GOERLI: ${{ secrets.STARKNET_ADMIN_PRIVATE_KEY_GOERLI }}
  #         STARKNET_ADMIN_PUBLIC_KEY_GOERLI: ${{ secrets.STARKNET_ADMIN_PUBLIC_KEY_GOERLI }}
  #         STARKNET_SOLIS_ACCOUNT_ADDRESS_GOERLI: ${{ secrets.STARKNET_SOLIS_ACCOUNT_ADDRESS_GOERLI }}
  #         STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY_GOERLI: ${{ secrets.STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY_GOERLI }}
  #         STARKNET_SOLIS_ACCOUNT_PUBLIC_KEY_GOERLI: ${{ secrets.STARKNET_SOLIS_ACCOUNT_PUBLIC_KEY_GOERLI }}
  #         SOLIS_ADMIN_ADDRESS_DEV: ${{ secrets.SOLIS_ADMIN_ADDRESS_DEV }}
  #         SOLIS_ADMIN_PRIVATE_KEY_DEV: ${{ secrets.SOLIS_ADMIN_PRIVATE_KEY_DEV }}
  #         SOLIS_ADMIN_PUBLIC_KEY_DEV: ${{ secrets.SOLIS_ADMIN_PUBLIC_KEY_DEV }}
